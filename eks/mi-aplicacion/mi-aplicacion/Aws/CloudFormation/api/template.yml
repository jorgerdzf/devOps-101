AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "ImmsExchange Template Format"

Parameters:
  ApplicationName:
    Description: App name
    Type: String
  EnvironmentType:
    Description: The environment type
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    ConstraintDescription: must be a dev, test or prod

Resources:
  EksClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ApplicationName}-${EnvironmentType}-eks-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              #AWS: !GetAtt CodeBuildRole.Arn
              Service: 
                - eks.amazonaws.com
                - cloudformation.amazonaws.com
                - codebuild.amazonaws.com
                - iam.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
      - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
      - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
  
  # STATIC RESOURCES SECTION
  # ECR repository
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${ApplicationName}-${EnvironmentType}-repo"

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ApplicationName}-${EnvironmentType}-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ApplicationName}-${EnvironmentType}-PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: "10.0.2.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ApplicationName}-${EnvironmentType}-PublicSubnet2

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub ${ApplicationName}-${EnvironmentType}-Cluster
      RoleArn: !GetAtt EksClusterRole.Arn
      Version: 1.27

  NodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: NodeInstanceRole

  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: EKSNodePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - eks:DescribeNodegroup
                  - eks:ListNodegroups
                  - eks:DescribeCluster
                  - eks:AccessKubernetesApi
                  - eks:GetToken
                Resource: "*"

  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for EKS nodes"
      VpcId:
        Ref: VPC

  NodeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      CidrIp: "0.0.0.0/0"

  NodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:
        Ref: EKSCluster
      NodegroupName: !Sub ${ApplicationName}-${EnvironmentType}-NodeGroup
      NodeRole:
        Fn::GetAtt:
          - NodeInstanceProfile
          - Arn
      Subnets:
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2
      AmiType: "AL2_x86_64"
      DiskSize: 20
      InstanceTypes:
        - "m5.large" # Adjust the instance type as needed

Outputs:
  RepositoryName:
    Description: Name of the ECR Repo
    Value: !Ref ECRRepository
  ClusterName:
    Description: Name of the EKS Cluster
    Value: !Ref EKSCluster
  EksClusterRoleArn:
    Description: CodeDeployRole Arn
    Value: !GetAtt EksClusterRole.Arn